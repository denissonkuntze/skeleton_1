
<div class="row">
    <div class="col-md-4">
        <p>single file</p>
        <form action="#" class="dropzone" id="dropzone_only"></form>
    </div>
    <div class="col-md-4">
        <p>multiple file</p>
        <form action="#" class="dropzone" id="dropzone_multiply"></form>
    </div>
    <div class="col-md-4">
        <p>onready dropzone file</p>
        <form action="#" class="dropzone fw-dropzone"></form>
    </div>
</div>

<hr>

<form action="#">
    <div class="row">
        <div class="col-md-6">
            <p>single file</p>
            <input type="file" class="file-input" data-show-preview="false" name="upload">
        </div>
        <div class="col-md-6">
            <p>multiple file</p>
            <input type="file" class="file-input" data-show-preview="false" name="upload" multiple="multiple">
        </div>
    </div>

    <hr>

    <div class="row">
        <div class="col-md-6">
            <p>single file</p>
            <input type="file" class="fw-file-input" name="upload" data-filename-input="filename_dest">
            <input type="text" name="filename_dest" id="filename_dest">
        </div>
        <div class="col-md-6">
            <p>multiple file</p>
            <input type="file" class="fw-file-input" name="upload" multiple="multiple">
        </div>
    </div>

    <hr>

    <div class="row">
        <div class="col-md-6">
            <p>single file</p>
            <input type="file" class="file-input-list" data-show-caption="false" data-show-upload="false" multiple="multiple">
            <input type="text" name="filename_dest" id="filename_dest">
        </div>
        <div class="col-md-6">
        </div>
    </div>

</form>

<script>

    $('#dropzone_only').dropzone({
        dictDefaultMessage: 'Drop file to upload <span>or CLICK</span>',
        url               : 'upload',
        paramName         : 'upload',
        maxFiles          : 1,
        uploadMultiple    : false,
        autoProcessQueue  : true,
        parallelUploads   : true,
        autoQueue         : true,
        addRemoveLinks    : true,
        init              : function ()
        {

            this.on('error', function (file)
            {
                //console.log(file);
            });

            this.on('complete', function (file)
            {
                //this.removeFile(file);
            });

            this.on('addedfile', function (file)
            {

                // upload de arquivo unico

                if (this.fileTracker) {
                    this.removeFile(this.fileTracker);
                }

                this.fileTracker = file;

            });
        }
    });

    $('#dropzone_multiply').dropzone({
        dictDefaultMessage: 'Drop file to upload <span>or CLICK</span>',
        url               : 'upload',
        paramName         : 'upload',
        maxFiles          : 10,
        uploadMultiple    : true,
        autoProcessQueue  : true,
        parallelUploads   : true,
        autoQueue         : true,
        addRemoveLinks    : true,
        init              : function ()
        {

            this.on('error', function (file)
            {
                //console.log(file);
            });

            this.on('complete', function (file)
            {
                //this.removeFile(file);
            });

            this.on('addedfile', function (file)
            {

            });

        }
    });

    // Modal template
    var modalTemplate = '<div class="modal-dialog modal-lg" role="document">\n' + '  <div class="modal-content">\n' + '    <div class="modal-header">\n' + '      <div class="kv-zoom-actions btn-group">{toggleheader}{fullscreen}{borderless}{close}</div>\n' + '      <h6 class="modal-title">{heading} <small><span class="kv-zoom-title"></span></small></h6>\n' + '    </div>\n' + '    <div class="modal-body">\n' + '      <div class="floating-buttons btn-group"></div>\n' + '      <div class="kv-zoom-body file-zoom-content"></div>\n' + '{prev} {next}\n' + '    </div>\n' + '  </div>\n' + '</div>\n';

    // Buttons inside zoom modal
    var previewZoomButtonClasses = {
        toggleheader: 'btn btn-default btn-icon btn-xs btn-header-toggle',
        fullscreen  : 'btn btn-default btn-icon btn-xs',
        borderless  : 'btn btn-default btn-icon btn-xs',
        close       : 'btn btn-default btn-icon btn-xs'
    };

    // Icons inside zoom modal classes
    var previewZoomButtonIcons = {
        prev        : '<i class="icon-arrow-left32"></i>',
        next        : '<i class="icon-arrow-right32"></i>',
        toggleheader: '<i class="icon-menu-open"></i>',
        fullscreen  : '<i class="icon-screen-full"></i>',
        borderless  : '<i class="icon-alignment-unalign"></i>',
        close       : '<i class="icon-cross3"></i>'
    };

    // File actions
    var fileActionSettings = {
        zoomClass       : 'btn btn-link btn-xs btn-icon',
        zoomIcon        : '<i class="icon-zoomin3"></i>',
        dragClass       : 'btn btn-link btn-xs btn-icon',
        dragIcon        : '<i class="icon-three-bars"></i>',
        removeClass     : 'btn btn-link btn-icon btn-xs',
        removeIcon      : '<i class="icon-trash"></i>',
        indicatorNew    : '<i class="icon-file-plus text-slate"></i>',
        indicatorSuccess: '<i class="icon-checkmark3 file-icon-large text-success"></i>',
        indicatorError  : '<i class="icon-cross2 text-danger"></i>',
        indicatorLoading: '<i class="icon-spinner2 spinner text-muted"></i>'
    };

    //
    // Basic example
    //

    fileUpload = $('.file-input');

    fileUpload.fileinput({
        showPreview             : false,
        showUpload              : true,
        uploadUrl               : 'upload',
        uploadAsync             : true,
        browseLabel             : 'Browse',
        browseIcon              : '<i class="icon-file-plus"></i>',
        uploadIcon              : '<i class="icon-file-upload2"></i>',
        removeIcon              : '<i class="icon-cross3"></i>',
        layoutTemplates         : {
            icon : '<i class="icon-file-check"></i>',
            modal: modalTemplate
        },
        initialCaption          : 'No file selected',
        previewZoomButtonClasses: previewZoomButtonClasses,
        previewZoomButtonIcons  : previewZoomButtonIcons,
        fileActionSettings      : fileActionSettings
    });

    fileUpload.on('fileuploaded', function(event, data, previewId, index) {
        //console.log('File uploaded triggered');
        //console.log(data);
        console.log(data.response.meta);
    });

    fileUpload.on('fileuploaderror', function(event, data, msg) {
        //console.log('File fileerror triggered');
        //console.log(data);
        console.log(data.jqXHR.responseJSON.meta);
    });

    $('.file-input-list').fileinput({
        showUploadedThumbs: false,
        browseLabel: 'Browse',
        browseIcon: '<i class="icon-file-plus"></i>',
        uploadIcon: '<i class="icon-file-upload2"></i>',
        removeIcon: '<i class="icon-cross3"></i>',
        layoutTemplates: {
            icon: '<i class="icon-file-check"></i>',
            modal: modalTemplate
        },
        initialCaption: "No file selected",
        previewZoomButtonClasses: previewZoomButtonClasses,
        previewZoomButtonIcons: previewZoomButtonIcons,
        fileActionSettings: fileActionSettings
    });

</script>